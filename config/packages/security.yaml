security:
    # Configuration des algorithmes de hachage pour les mots de passe
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        # Symfony choisit automatiquement le meilleur algorithme en fonction de l'environnement

    # Configuration des fournisseurs d'utilisateurs
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username
                # Utilisation de l'entité User pour charger les utilisateurs à partir de la base de données
                # Le champ utilisé pour identifier les utilisateurs est "username"

    # Définition des firewalls
    firewalls:
        # Firewall pour les outils de développement (profiler, debug toolbar, etc.)
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            # Aucune sécurité n'est appliquée pour ces chemins

        # Firewall pour le login
        login:
            pattern: ^/user/login
            stateless: true
            security: false
            # Le point d'entrée pour la connexion des utilisateurs, aucune sécurité n'est nécessaire ici

        # Firewall pour les routes liées aux projets
        projects:
            pattern: ^/projects
            stateless: true
            provider: app_user_provider
            jwt: ~
            # Protection des routes sous `/projects` avec un système JWT (JSON Web Token)

        # Firewall pour les routes liées aux utilisateurs
        api:
            pattern: ^/user
            stateless: true
            provider: app_user_provider
            jwt: ~
            # Protection des routes sous `/user` avec authentification via JWT

        # Firewall pour les routes liées aux rôles
        role:
            pattern: ^/role
            stateless: true
            provider: app_user_provider
            jwt: ~
            # Protection des routes sous `/role` avec JWT

        # Firewall pour les notes
        notes:
            pattern: ^/notes
            stateless: true
            provider: app_user_provider
            jwt: ~
            # Protection des routes sous `/notes` avec JWT

    # Définition des règles de contrôle d'accès
    access_control:
        - { path: ^/user/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/user/admin/create, roles: ROLE_ADMIN }
        - { path: ^/user, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/role, roles: ROLE_ADMIN }
        - { path: ^/projects/new, roles: ROLE_ADMIN }
        - { path: ^/projects/[0-9]+/delete, roles: ROLE_ADMIN }
        - { path: ^/notes, roles: IS_AUTHENTICATED_FULLY }

# Configuration de sécurité spécifique pour l'environnement de test
when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
                # Réduction des paramètres de hachage (cost, time_cost, memory_cost)
                # pour améliorer les performances lors des tests
