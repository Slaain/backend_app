composer create-project symfony/skeleton nom_du_projet
cd nom_du_projet

composer require symfony/orm-pack 2

DATABASE_URL="mysql://username:password@127.0.0.1:3306/nom_de_la_base?serverVersion=5.7"

php bin/console make:entity User
php bin/console make:entity Note

php bin/console make:migration

php bin/console doctrine:migrations:migrate

php bin/console make:controller --no-template NomDuController

 php bin/console app:create-user john 123456 ROLE_ADMIN

 /**
     * @Route("/user/new", name="user_new", methods={"GET", "POST"})
     */
public function new(Request $request, EntityManagerInterface $em, UserPasswordHasherInterface $passwordHasher): Response
{
    $user = new User();
    $form = $this->createForm(UserType::class, $user);

    $form->handleRequest($request);
    if ($form->isSubmitted() && $form->isValid()) {
        // Hacher le mot de passe
        $hashedPassword = $passwordHasher->hashPassword($user, $user->getPassword());
        $user->setPassword($hashedPassword);

        $em->persist($user);
        $em->flush();

        return $this->redirectToRoute('user_index');
    }

    return $this->render('user/new.html.twig', [
        'form' => $form->createView(),
    ]);
}
GET /user/new
/**
 * @Route("/user", name="user_index", methods={"GET"})
 */
public function index(EntityManagerInterface $em): Response
{
    $users = $em->getRepository(User::class)->findAll();

    return $this->render('user/index.html.twig', [
        'users' => $users,
    ]);
}


UPDATE

/**
 * @Route("/user/{id}/edit", name="user_edit", methods={"GET", "POST"})
 */
public function edit(User $user, Request $request, EntityManagerInterface $em, UserPasswordHasherInterface $passwordHasher): Response
{
    $form = $this->createForm(UserType::class, $user);

    $form->handleRequest($request);
    if ($form->isSubmitted() && $form->isValid()) {
        if ($user->getPassword()) {
            $hashedPassword = $passwordHasher->hashPassword($user, $user->getPassword());
            $user->setPassword($hashedPassword);
        }

        $em->flush();

        return $this->redirectToRoute('user_index');
    }

    return $this->render('user/edit.html.twig', [
        'form' => $form->createView(),
        'user' => $user,
    ]);
}

